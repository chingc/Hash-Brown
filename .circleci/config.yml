version: 2

jobs:
  python37:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache: &key37
          key: pip37-cache-v1-{{ .Branch }}-{{ checksum "pyproject.lock" }}
      - run: &dependencies
          name: Dependencies
          command: |
            python -m venv .venv
            source .venv/bin/activate
            pip install poetry
            poetry config settings.virtualenvs.in-project true
            poetry install
      - save_cache:
          <<: *key37
          paths:
            - .venv
      - run:
          name: Mypy
          command: |
            source .venv/bin/activate
            poetry run mypy --ignore-missing-imports --strict hb
            poetry run mypy --ignore-missing-imports --strict tests
          when: always
      - run:
          name: Pylint
          # C0111: missing-docstring
          # C0301: line-too-long
          # C0321: multiple-statements
          command: |
            source .venv/bin/activate
            poetry run pylint -d C0301 hb
            poetry run pylint -d C0111,C0301,C0321 tests
          when: always
      - run: &test
          name: Test
          command: |
            source .venv/bin/activate
            poetry run coverage run -m pytest --junit-xml=test-results/pytest/results.xml
          when: always
      - run:
          name: Codecov
          command: |
            source .venv/bin/activate
            poetry run codecov
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: test-results

  python36:
    docker:
      - image: circleci/python:3.6.6
    steps:
      - checkout
      - restore_cache: &key36
          key: pip36-cache-v1-{{ .Branch }}-{{ checksum "pyproject.lock" }}
      - run:
          <<: *dependencies
      - save_cache:
          <<: *key36
          paths:
            - .venv
      - run:
          <<: *test

workflows:
  version: 2

  commit:
    jobs:
      - python37
      - python36

  weekly:
    jobs:
      - python37
      - python36
    triggers:
      - schedule:
          cron: "1 0 * * 1"
          filters:
            branches:
              only:
                - master
