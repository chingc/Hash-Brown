python_versions:
  - &py37 3.7.3
  - &py36 3.6.8

set_python: &set_python
  parameters:
    lint:
      type: boolean
      default: false
      description: Set true to lint
    tag:
      type: string
      default: latest
      description: Docker tag for circleci/python
  docker:
    - image: circleci/python:<< parameters.tag >>
      environment:
        TZ: America/New_York

restore: &restore
  keys:
    - &pk python-<< parameters.tag >>-pip-cache-v1-{{ .Branch }}-{{ checksum "poetry.lock" }}
    - python-<< parameters.tag >>-pip-cache-v1-{{ .Branch }}
    - python-<< parameters.tag >>-pip-cache-v1

save: &save
  key: *pk
  paths:
    - .venv

version: 2.1

commands:

  dependencies:
    steps:
      - run:
          name: Install dependencies
          command: |
            poetry config settings.virtualenvs.in-project true
            poetry install
            echo 'source .venv/bin/activate' >> ${BASH_ENV}

  lint:
    steps:
      - run:
          name: Pylint
          command: |
            pylint hb
          when: always
      - run:
          name: Mypy
          command: |
            mypy hb
          when: always

  test:
    steps:
      - run:
          name: Pytest
          command: |
            coverage run -m pytest --junit-xml=test-results/pytest/results.xml
      - run:
          name: Coverage
          command: |
            coverage html --include="hb/*" --directory=test-results/coverage
            coverage report --include="hb/*"
      - run:
          name: Codecov
          command: |
            codecov

  artifacts:
    steps:
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: test-results

jobs:

  test:
    <<: *set_python
    steps:
      - checkout
      - restore_cache:
          <<: *restore
      - dependencies
      - test
      - when:
          condition: << parameters.lint >>
          steps:
            - lint
      - artifacts

  warm:
    <<: *set_python
    steps:
      - checkout
      - restore_cache:
          <<: *restore
      - dependencies
      - save_cache:
          <<: *save

workflows:

  version: 2

  commit:
    jobs:
      - test:
          name: Python 3.7
          tag: *py37
          lint: true
      - test:
          name: Python 3.6
          tag: *py36

  weekly:
    jobs:
      - test:
          name: Weekly 3.7
          tag: *py37
          lint: true
      - test:
          name: Weekly 3.6
          tag: *py36
    triggers:
      - schedule:
          cron: 0 23 * * 0
          filters:
            branches:
              only:
                - master

  warming:
    jobs:
      - warm:
          name: Cache 3.7
          tag: *py37
      - warm:
          name: Cache 3.6
          tag: *py36
    triggers:
      - schedule:
          cron: 0 22 * * 0
          filters:
            branches:
              only:
                - master
