version: 2

jobs:
  cache:
    docker: &py37
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache: &cache_key
          key: pip-cache-v1-{{ .Branch }}-{{ checksum "pyproject.lock" }}
      - run:
          name: Install dependencies
          command: |
            python -m venv .venv
            source .venv/bin/activate
            pip install poetry
            poetry config settings.virtualenvs.in-project true
            poetry install
      - save_cache:
          <<: *cache_key
          paths:
            - .venv

  lint:
    docker: *py37
    steps:
      - checkout
      - restore_cache:
          <<: *cache_key
      - run:
          name: Mypy
          command: |
            source .venv/bin/activate
            poetry run mypy --ignore-missing-imports --strict hb
            poetry run mypy --ignore-missing-imports --strict tests
          when: always
      - run:
          name: Pylint
          # C0111: missing-docstring
          # C0301: line-too-long
          # C0321: multiple-statements
          # C0411: wrong-import-order
          # E1101: no-member
          # E1120: no-value-for-parameter
          # E1135: unsupported-membership-test
          # E1136: unsubscriptable-object
          # E1137: unsupported-assignment-operation
          command: |
            source .venv/bin/activate
            poetry run pylint -d C0301,C0411,E1101,E1120,E1135,E1136,E1137 hb
            poetry run pylint -d C0111,C0301,C0321 tests
          when: always

  test:
    docker: *py37
    steps:
      - checkout
      - restore_cache:
          <<: *cache_key
      - run:
          name: Test
          command: |
            source .venv/bin/activate
            poetry run coverage run -m pytest --junit-xml=test-results/pytest/results.xml
      - run:
          name: Codecov
          command: |
            source .venv/bin/activate
            poetry run codecov
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: test-results

workflows:
  version: 2

  commit:
    jobs:
      - cache
      - test:
          requires:
            - cache
      - lint:
          requires:
            - cache

  weekly:
    jobs:
      - lint
      - test
    triggers:
      - schedule:
          cron: "1 0 * * 1"
          filters:
            branches:
              only:
                - master
